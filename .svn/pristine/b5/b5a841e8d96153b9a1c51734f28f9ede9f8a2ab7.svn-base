<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Tue Oct 04 10:13:17 EDT 2016 -->
<title>T-Index</title>
<meta name="date" content="2016-10-04">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="T-Index";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-16.html">Prev Letter</a></li>
<li><a href="index-18.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-files/index-17.html" target="_top">Frames</a></li>
<li><a href="index-17.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">K</a>&nbsp;<a href="index-11.html">M</a>&nbsp;<a href="index-12.html">N</a>&nbsp;<a href="index-13.html">O</a>&nbsp;<a href="index-14.html">P</a>&nbsp;<a href="index-15.html">R</a>&nbsp;<a href="index-16.html">S</a>&nbsp;<a href="index-17.html">T</a>&nbsp;<a href="index-18.html">U</a>&nbsp;<a href="index-19.html">V</a>&nbsp;<a href="index-20.html">W</a>&nbsp;<a name="I:T">
<!--   -->
</a>
<h2 class="title">T</h2>
<dl>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testAddAndDeleteWall--">testAddAndDeleteWall()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the addWall, deleteWall methods</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testAreaOverlapsWithRoom--">testAreaOverlapsWithRoom()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the areaOverlapsWithRoom method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeBuilderEllerTest.html#testBoardMerge--">testBoardMerge()</a></span> - Method in class generation.<a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dt>
<dd>
<div class="block">Method: mergeSetsOnBoard(int[][] board, int w, int h, int cell1, int cell2, int height)
 Test: After horizontal merge occurs between cell1 and cell2, 
 check if other cells in cell2's set also merged to cell1's set.</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testCanGo--">testCanGo()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the canGo method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistanceDFSNonPerfect3--">testCellDistanceDFSNonPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of DFS's Algorithm with a non-perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistanceDFSPerfect2--">testCellDistanceDFSPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of DFS's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistanceDFSPerfect5--">testCellDistanceDFSPerfect5()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of DFS's Algorithm with a perfect maze of skill level 5</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistanceEllerNonPerfect1--">testCellDistanceEllerNonPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Eller's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistanceEllerNonPerfect6--">testCellDistanceEllerNonPerfect6()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Eller's Algorithm with a non-perfect maze of skill level 6</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistanceEllerPerfect0--">testCellDistanceEllerPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Eller's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistanceEllerPerfect2--">testCellDistanceEllerPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Eller's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistanceNonPrimPerfect1--">testCellDistanceNonPrimPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Prim's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistancePrimNonPerfect10--">testCellDistancePrimNonPerfect10()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Prim's Algorithm with a non-perfect maze of skill level 10</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistancePrimNonPerfect4--">testCellDistancePrimNonPerfect4()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Prim's Algorithm with a non-perfect maze of skill level 4</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistancePrimPerfect0--">testCellDistancePrimPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Prim's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistancePrimPerfect3--">testCellDistancePrimPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Prim's Algorithm with a perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellDistancePrimPerfect7--">testCellDistancePrimPerfect7()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests to make sure every cell has distance to exit
 of Prim's Algorithm with a perfect maze of skill level 7</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathDFSNonPerfect3--">testCellPathDFSNonPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 DFS's Algorithm with a non-perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathDFSPerfect2--">testCellPathDFSPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 DFS's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathDFSPerfect5--">testCellPathDFSPerfect5()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 DFS's Algorithm with a perfect maze of skill level 5</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathEllerNonPerfect1--">testCellPathEllerNonPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Eller's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathEllerNonPerfect6--">testCellPathEllerNonPerfect6()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Eller's Algorithm with a non-perfect maze of skill level 6</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathEllerPerfect0--">testCellPathEllerPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Eller's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathEllerPerfect2--">testCellPathEllerPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Eller's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathNonPrimPerfect1--">testCellPathNonPrimPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Prim's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathPrimNonPerfect10--">testCellPathPrimNonPerfect10()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Prim's Algorithm with a non-perfect maze of skill level 10</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathPrimNonPerfect4--">testCellPathPrimNonPerfect4()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Prim's Algorithm with a non-perfect maze of skill level 4</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathPrimPerfect0--">testCellPathPrimPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Prim's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathPrimPerfect3--">testCellPathPrimPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Prim's Algorithm with a perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testCellPathPrimPerfect7--">testCellPathPrimPerfect7()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests path to exit of every cell--
 Prim's Algorithm with a perfect maze of skill level 7</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testCells--">testCells()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: See if constructor used in setUp delivers anything</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testCellsBothConstructors--">testCellsBothConstructors()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: See if the two constructor methods work in a consistent manner</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testCellsConstructorWithArray--">testCellsConstructorWithArray()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Check if constructor that takes existing array really 
 copies values and resets values with the initialize method.</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeBuilderEllerTest.html#testDeleteWallsForLastRow--">testDeleteWallsForLastRow()</a></span> - Method in class generation.<a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dt>
<dd>
<div class="block">Method: deleteWallsForLastRow(HashMap<Integer, ArrayList<int[]>> sets, int[][] board, int w, Cells cells)
 Test: check if method correctly removes walls of last row.</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testExitPosition--">testExitPosition()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of methods for exit position</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testGetCWConstantForDirection--">testGetCWConstantForDirection()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test method for <code>generation.CardinalDirection#getCWConstantForDirection()</code>.</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeBuilderEllerTest.html#testHashMapMerge--">testHashMapMerge()</a></span> - Method in class generation.<a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dt>
<dd>
<div class="block">Method: mergeSetsInHashMap(HashMap<Integer, ArrayList<int[]>> sets, int cell1, int cell2)
 Check if method correctly merges sets of cell1 and cell 2 for horizontal connections</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeBuilderEllerTest.html#testHashMapSetUp--">testHashMapSetUp()</a></span> - Method in class generation.<a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dt>
<dd>
<div class="block">Method: initializeHashMapWithSingletons(HashMap<Integer, ArrayList<int[]>> sets, int[][] board)
 Test: Check if method sets up hash map such that each key corresponds with a set ID name
 and values of each key contain correct cell locations.</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeBuilderEllerTest.html#testHashMapVertConnection--">testHashMapVertConnection()</a></span> - Method in class generation.<a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dt>
<dd>
<div class="block">Method: mergeSetsInHashMapVertical(HashMap<Integer, ArrayList<int[]>> sets, int[][] board, int w, Integer key,
                        int[] addVert)
 Check if method correctly merges sets of cell1 and cell 2 for vertical connections</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testHasMaskedBitsFalse--">testHasMaskedBitsFalse()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the hasMaskedBitsFalse method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testHasMaskedBitsTrue--">testHasMaskedBitsTrue()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the hasMaskedBitsTrue method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testHasWall--">testHasWall()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the hasWall, hasNoWall methods</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightDFSNonPerfect3--">testHeightDFSNonPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of DFS's Algorithm with a non-perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightDFSPerfect2--">testHeightDFSPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of DFS's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightDFSPerfect5--">testHeightDFSPerfect5()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of DFS's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightEllerNonPerfect1--">testHeightEllerNonPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Eller's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightEllerNonPerfect6--">testHeightEllerNonPerfect6()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Eller's Algorithm with a perfect maze of skill level 6</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightEllerPerfect0--">testHeightEllerPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Eller's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightEllerPerfect2--">testHeightEllerPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Eller's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightPrimNonPerfect1--">testHeightPrimNonPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Prim's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightPrimNonPerfect10--">testHeightPrimNonPerfect10()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Prim's Algorithm with a non-perfect maze of skill level 10</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightPrimNonPerfect4--">testHeightPrimNonPerfect4()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Prim's Algorithm with a non-perfect maze of skill level 4</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightPrimPerfect0--">testHeightPrimPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Prim's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightPrimPerfect3--">testHeightPrimPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getHeight method of Prim's Algorithm with a perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testHeightPrimPerfect7--">testHeightPrimPerfect7()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Prim's Algorithm with a perfect maze of skill level 7</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testInitialize--">testInitialize()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the initialize method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testIsInRoom--">testIsInRoom()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the isInRoom method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testMarkAreaAsRoom--">testMarkAreaAsRoom()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the markAreaAsRoom method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitDFSNonPerfect3--">testOneExitDFSNonPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 DFS's Algorithm with a non-perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitDFSPerfect2--">testOneExitDFSPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 DFS's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitDFSPerfect5--">testOneExitDFSPerfect5()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 DFS's Algorithm with a perfect maze of skill level 5</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitEllerNonPerfect1--">testOneExitEllerNonPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Eller's Algorithm with a perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitEllerNonPerfect3--">testOneExitEllerNonPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Eller's Algorithm with a non-perfect maze of skill level 6</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitEllerPerfect0--">testOneExitEllerPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Eller's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitEllerPerfect2--">testOneExitEllerPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Eller's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitPrimNonPerfect1--">testOneExitPrimNonPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Prim's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitPrimNonPerfect10--">testOneExitPrimNonPerfect10()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Prim's Algorithm with a non-perfect maze of skill level 10</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitPrimNonPerfect4--">testOneExitPrimNonPerfect4()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Prim's Algorithm with a non-perfect maze of skill level 4</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitPrimPerfect0--">testOneExitPrimPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Prim's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitPrimPerfect3--">testOneExitPrimPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Prim's Algorithm with a perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testOneExitPrimPerfect7--">testOneExitPrimPerfect7()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests that there is one exit--
 Prim's Algorithm with a perfect maze of skill level 7</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeBuilderEllerTest.html#testPopulateBoard--">testPopulateBoard()</a></span> - Method in class generation.<a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dt>
<dd>
<div class="block">Method: populate(int[][] board)
 Test: Check if method populates board with unique integer values</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testSetCellAsVisitedToZero--">testSetCellAsVisitedToZero()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the setCellAsVisited method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testSetInRoomToOne--">testSetInRoomToOne()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the setInRoomToOne method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/CellsTest.html#testToString--">testToString()</a></span> - Method in class generation.<a href="../generation/CellsTest.html" title="class in generation">CellsTest</a></dt>
<dd>
<div class="block">Test case: Correctness of the toString method</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeBuilderEllerTest.html#testWallDeletedInCellsAfterHorizontalMerge--">testWallDeletedInCellsAfterHorizontalMerge()</a></span> - Method in class generation.<a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dt>
<dd>
<div class="block">Method: deleteWallsForHorizontalConnections(HashMap<Integer, ArrayList<int[]>> sets, int[][] board, int w, Cells cells)
Test: Check that cells of same sets do not have walls in specified row.</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeBuilderEllerTest.html#testWallDeletedInCellsAfterVerticalMerge--">testWallDeletedInCellsAfterVerticalMerge()</a></span> - Method in class generation.<a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dt>
<dd>
<div class="block">Method: deleteWallsForVerticalConnections(HashMap<Integer, ArrayList<int[]>> sets, int[][] board, int w, Cells cells)
 Test: Check that vertical connections exist for sets of same cells.</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthDFSNonPerfect3--">testWidthDFSNonPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of DFS's Algorithm with a non-perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthDFSPerfect2--">testWidthDFSPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of DFS's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthDFSPerfect5--">testWidthDFSPerfect5()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of DFS's Algorithm with a perfect maze of skill level 5</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthEllerNonPerfect1--">testWidthEllerNonPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Eller's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthEllerNonPerfect6--">testWidthEllerNonPerfect6()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Eller's Algorithm with a perfect maze of skill level 6</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthEllerPerfect0--">testWidthEllerPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Eller's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthEllerPerfect2--">testWidthEllerPerfect2()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Eller's Algorithm with a perfect maze of skill level 2</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthPrimNonPerfect1--">testWidthPrimNonPerfect1()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Prim's Algorithm with a non-perfect maze of skill level 1</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthPrimNonPerfect10--">testWidthPrimNonPerfect10()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Prim's Algorithm with a non-perfect maze of skill level 10</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthPrimNonPerfect4--">testWidthPrimNonPerfect4()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Prim's Algorithm with a non-perfect maze of skill level 4</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthPrimPerfect0--">testWidthPrimPerfect0()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Prim's Algorithm with a perfect maze of skill level 0</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthPrimPerfect3--">testWidthPrimPerfect3()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Prim's Algorithm with a perfect maze of skill level 3</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/MazeFactoryTest.html#testWidthPrimPerfect7--">testWidthPrimPerfect7()</a></span> - Method in class generation.<a href="../generation/MazeFactoryTest.html" title="class in generation">MazeFactoryTest</a></dt>
<dd>
<div class="block">Tests getWidth method of Prim's Algorithm with a perfect maze of skill level 7</div>
</dd>
<dt><span class="memberNameLink"><a href="../generation/Cells.html#toString--">toString()</a></span> - Method in class generation.<a href="../generation/Cells.html" title="class in generation">Cells</a></dt>
<dd>
<div class="block">Methods dumps internal data into a string, intended usage is for debugging purposes.</div>
</dd>
</dl>
<a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">K</a>&nbsp;<a href="index-11.html">M</a>&nbsp;<a href="index-12.html">N</a>&nbsp;<a href="index-13.html">O</a>&nbsp;<a href="index-14.html">P</a>&nbsp;<a href="index-15.html">R</a>&nbsp;<a href="index-16.html">S</a>&nbsp;<a href="index-17.html">T</a>&nbsp;<a href="index-18.html">U</a>&nbsp;<a href="index-19.html">V</a>&nbsp;<a href="index-20.html">W</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-16.html">Prev Letter</a></li>
<li><a href="index-18.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-files/index-17.html" target="_top">Frames</a></li>
<li><a href="index-17.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
