package edu.wm.cs.cs301.julianadajon.UI;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Switch;
import android.widget.Toast;
import android.widget.CompoundButton;

import edu.wm.cs.cs301.julianadajon.R;

public class PlayActivity extends AppCompatActivity {

    private static Button shortCutButton;
    private int batteryLevel;
    private int pathLength;

    private static ProgressBar energyProgressBar;
    private static TextView consumption;
    private String robot;

    private static Switch switchMap;
    private static Switch switchSolution;
    private static Switch switchWalls;

    private static Button forwardButton;
    private static Button backwardButton;
    private static Button leftButton;
    private static Button rightButton;
    private static Button playButton;
    private static Button pauseButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_play);

        shortCutButton();
        energyProgressBar();

        switchMap();
        switchSolution();
        switchWalls();

        getRobot();
        if (robot.equals("Manual")){
            playButton();
            playButton.setVisibility(View.INVISIBLE);
            pauseButton();
            pauseButton.setVisibility(View.INVISIBLE);
            forwardButton();
            backwardButton();
            leftButton();
            rightButton();
        }

        else {
            forwardButton();
            backwardButton();
            leftButton();
            rightButton();
            forwardButton.setVisibility(View.INVISIBLE);
            backwardButton.setVisibility(View.INVISIBLE);
            leftButton.setVisibility(View.INVISIBLE);
            rightButton.setVisibility(View.INVISIBLE);
            playButton();
            pauseButton();

        }
    }


    protected void energyProgressBar() {
        energyProgressBar = (ProgressBar)findViewById(R.id.progressBar2);
        consumption = (TextView)findViewById(R.id.textView9);

        energyProgressBar.setProgress(energyProgressBar.getMax());
        consumption.setText("Energy left: " + energyProgressBar.getMax());

    }


    protected void switchMap(){
        switchMap = (Switch)findViewById(R.id.switch1);
        switchMap.setOnCheckedChangeListener(
                new Switch.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (isChecked == true) {
                            Toast.makeText(PlayActivity.this, "Map On", Toast.LENGTH_SHORT).show();
                            Log.v("PlayActivity", "Map On");
                        }
                        else {
                            Toast.makeText(PlayActivity.this, "Map Off", Toast.LENGTH_SHORT).show();
                            Log.v("PlayActivity", "Map Off");
                        }
                    }
                }
        );

    }

    protected void switchSolution(){
        switchSolution = (Switch)findViewById(R.id.switch2);
        switchSolution.setOnCheckedChangeListener(
                new Switch.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (isChecked == true) {
                            Toast.makeText(PlayActivity.this, "Solution On", Toast.LENGTH_SHORT).show();
                            Log.v("PlayActivity", "Solution On");
                        }
                        else {
                            Toast.makeText(PlayActivity.this, "Solution Off", Toast.LENGTH_SHORT).show();
                            Log.v("PlayActivity", "Solution Off");
                        }
                    }
                }
        );
    }

    protected void switchWalls(){
        switchWalls = (Switch)findViewById(R.id.switch3);
        switchWalls.setOnCheckedChangeListener(
                new Switch.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (isChecked == true) {
                            Toast.makeText(PlayActivity.this, "Walls On", Toast.LENGTH_SHORT).show();
                            Log.v("PlayActivity", "Walls On");
                        }
                        else {
                            Toast.makeText(PlayActivity.this, "Walls Off", Toast.LENGTH_SHORT).show();
                            Log.v("PlayActivity", "Walls Off");
                        }
                    }
                }
        );
    }

    protected void shortCutButton() {
        shortCutButton = (Button)findViewById(R.id.button2);
        shortCutButton.setOnClickListener(

                new Button.OnClickListener(){

                    public void onClick(View v){
                        switch (v.getId()) {
                            case R.id.button2 :
                                shortCutButtonClick();
                                Toast.makeText(PlayActivity.this, "Switch to Finish", Toast.LENGTH_SHORT).show();
                                Log.v("PlayActivity", "Switch to Finish");
                                break;

                        }
                    }
                }
        );
    }

    private void shortCutButtonClick(){

        Intent intent = new Intent(this, FinishActivity.class);
        intent.putExtra("batteryLevel", Integer.toString(batteryLevel));
        intent.putExtra("pathLength", Integer.toString(pathLength));
        startActivity(intent);
        finish();
    }

    protected void forwardButton() {
        forwardButton = (Button)findViewById(R.id.button3);
        forwardButton.setOnClickListener(

                new Button.OnClickListener(){

                    public void onClick(View v){

                        switch (v.getId()) {
                            case R.id.button3 :
                                Toast.makeText(PlayActivity.this, "You moved forward", Toast.LENGTH_SHORT).show();
                                Log.v("PlayActivity", "You moved forward");
                                break;

                        }
                    }
                }
        );
    }


    protected void backwardButton() {
        backwardButton = (Button)findViewById(R.id.button4);
        backwardButton.setOnClickListener(

                new Button.OnClickListener(){

                    public void onClick(View v){
                        switch (v.getId()) {
                            case R.id.button4 :
                                Toast.makeText(PlayActivity.this, "You moved backward", Toast.LENGTH_SHORT).show();
                                Log.v("PlayActivity", "You moved backward");
                                break;

                        }
                    }
                }
        );
    }

    protected void rightButton() {
        rightButton = (Button)findViewById(R.id.button5);
        rightButton.setOnClickListener(

                new Button.OnClickListener(){

                    public void onClick(View v){
                        switch (v.getId()) {
                            case R.id.button5 :
                                Toast.makeText(PlayActivity.this, "You moved right", Toast.LENGTH_SHORT).show();
                                Log.v("PlayActivity", "You moved right");
                                break;

                        }
                    }
                }
        );
    }

    protected void leftButton() {
        leftButton = (Button)findViewById(R.id.button6);
        leftButton.setOnClickListener(

                new Button.OnClickListener(){

                    public void onClick(View v){
                        switch (v.getId()) {
                            case R.id.button6 :
                                Toast.makeText(PlayActivity.this, "You moved left", Toast.LENGTH_SHORT).show();
                                Log.v("PlayActivity", "You moved left");
                                break;

                        }
                    }
                }
        );
    }

    protected void playButton() {
        playButton = (Button)findViewById(R.id.button7);
        playButton.setOnClickListener(

                new Button.OnClickListener(){

                    public void onClick(View v){
                        switch (v.getId()) {
                            case R.id.button7 :
                                Toast.makeText(PlayActivity.this, "You pressed play", Toast.LENGTH_SHORT).show();
                                Log.v("PlayActivity", "You pressed play");
                                break;

                        }
                    }
                }
        );
    }

    protected void pauseButton() {
        pauseButton = (Button)findViewById(R.id.button8);
        pauseButton.setOnClickListener(

                new Button.OnClickListener(){

                    public void onClick(View v){
                        switch (v.getId()) {
                            case R.id.button8 :
                                Toast.makeText(PlayActivity.this, "You pressed pause", Toast.LENGTH_SHORT).show();
                                Log.v("PlayActivity", "You pressed pause");
                                break;

                        }
                    }
                }
        );
    }


    private void getRobot() {
        Intent irobot = getIntent();
        robot = irobot.getStringExtra("spinnerRobot");
    }

    @Override
    public void onBackPressed(){
        Intent back = new Intent(this, AMazeActivity.class);
        startActivity(back);
        finish();
    }
}
